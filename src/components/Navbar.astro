---
import SearchBar from "@/components/SearchBar.astro";
import { Icon } from "astro-icon/components";
import { getRelativeLocaleUrl } from "astro:i18n";
import { languages, useTranslations } from "@/i18n";

const { locale } = Astro.props;
const t = useTranslations(locale);
---

<nav>
  <section class="logo">
    <a class="nav-btn" href="/" title={t("nav.home")}>Efraim</a>
  </section>

  <section class="lang-picker">
    {languages.map((lang) => <a href={`/${lang.id}`}>{lang.emoji}</a>)}
  </section>

  <section class="left">
    <button class="nav-btn" title={t("nav.theme-toggle")}>
      <div class="icon--light">
        <Icon name="ic:outline-light-mode" size={25} />
      </div>
      <div class="icon--dark">
        <Icon name="ic:outline-dark-mode" size={25} />
      </div>
    </button>

    <SearchBar {locale} />

    <button class="nav-btn" id="open-nav" title={t("nav.open-nav")}>
      <Icon name="mdi:hamburger-menu" size={28} />
    </button>

    <ul class="nav-links-wrapper">
      <li class="nav-links-wrapper__header">
        <button class="nav-btn" id="close-nav" title={t("nav.close-nav")}>
          <Icon name="mdi:close" size={28} />
        </button>
      </li>

      <li>
        <a class="nav-links" href={getRelativeLocaleUrl(locale, "/")}>
          {t("nav.link.home")}
        </a>
      </li>

      <li>
        <a class="nav-links" href={getRelativeLocaleUrl(locale, "blog")}>
          {t("nav.link.blog")}
        </a>
      </li>

      <li>
        <a class="nav-links" href={getRelativeLocaleUrl(locale, "journal")}>
          {t("nav.link.journal")}
        </a>
      </li>

      <li>
        <a class="nav-links" href={getRelativeLocaleUrl(locale, "about")}>
          {t("nav.link.about")}
        </a>
      </li>
    </ul>
  </section>
</nav>

<style>
  nav,
  .nav-links-wrapper.active {
    background: var(--navbar-bg);
    box-shadow: 0 2px 20px -2px var(--outline-color-mute);
    outline: 2px solid var(--outline-color-mute);
    backdrop-filter: blur(0.4rem);
  }

  /**
  * Chromium browsers doesn't support nested backdrop-filter 
  * https://havn.blog/2024/03/14/chromium-and-nested.html
  * */
  nav:has(.active) {
    backdrop-filter: none;
  }

  nav {
    color: var(--text);

    user-select: none;
    position: sticky;
    width: 100%;
    top: 0;
    z-index: 10;
  }

  nav,
  nav .left,
  .nav-links-wrapper__header {
    display: flex;
    align-items: center;
  }

  nav a {
    color: inherit;
    text-decoration: unset;
    display: block;
    position: relative;
  }

  nav button {
    cursor: pointer;
  }

  .nav-links-wrapper {
    background: var(--navbar-bg);
    list-style-type: none;
    padding: 0;
    margin: 0;

    position: fixed;
    inset: 0 0 auto 0;
    display: flex;
    flex-direction: column;

    will-change: transform;
    transform: translateY(-100%);
    visibility: hidden;
    transition:
      transform 200ms ease,
      visibility 200ms ease;
  }

  .nav-links-wrapper.active {
    visibility: visible;
    transform: none;
  }

  .nav-links-wrapper__header {
    outline: 2px solid var(--outline-color-mute);
    justify-content: flex-end;
  }

  .nav-links-wrapper__header > *,
  .nav-links {
    padding: 1.5rem;
  }

  .nav-btn {
    padding: 1rem;
  }

  .nav-btn:is(:hover, :focus-visible) {
    color: var(--primary);
  }

  #open-nav {
    @media (min-width: 45rem) {
      display: none;
    }
  }

  .logo a {
    font-weight: bold;
    text-decoration: underline;
    text-decoration-color: var(--accent);
  }

  .nav-links {
    text-align: right;
    color: var(--nav-link-color);
    transition: color var(--transition);
  }

  .nav-links::before {
    content: "";
    position: absolute;
    bottom: 0;
    right: 0;
    height: 0.25rem;
    width: 100%;
    background: var(--outline-color);
    transform: scale(0);
    transition: transform var(--transition);
  }

  .nav-links:focus::before {
    transform: scale(1);
  }

  @media (hover: hover) {
    .nav-links:hover,
    nav button:hover {
      color: var(--nav-link-color-hover);
    }

    .nav-links:hover::before {
      transform: scale(1);
    }
  }

  @media screen and (min-width: 50em) {
    .nav-links-wrapper {
      background: transparent;
      outline: none;
      visibility: visible;
      transform: none;
      position: relative;
      flex-direction: row;
    }

    .nav-links-wrapper__header {
      display: none;
    }
  }

  .lang-picker {
    margin-left: auto;
    display: flex;
    gap: 0.5rem;
  }
</style>

<script>
  import "@/scripts/navbar.js";
  import "@/scripts/theme";
</script>
